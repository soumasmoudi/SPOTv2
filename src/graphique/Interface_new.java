/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphique;

import java.awt.Color;

import entities.GroupManager;
import entities.HealthAuthority;
import entities.Proxy;
import entities.Server;
import entities.TrustedAuthority;
import entities.User;
import it.unisa.dia.gas.jpbc.Element;
import it.unisa.dia.gas.jpbc.Pairing;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

import edu.jhu.isi.grothsahai.entities.Proof;
import edu.jhu.isi.grothsahai.entities.Statement;
import utilities.Contact;
import utilities.ContactSigned;

/**
 *
 * @author fadel 
 * 		   NE PAS TOUCHER A LA FONCTION INIT_COMPONENTS, 
 * la modification de la disposition des éléments graphiques du démonstrateur se fait avec NetBeans
 */
public class Interface_new extends javax.swing.JFrame {

	/**
	 * Creates new form Interface_new
	 */
	public Interface_new() {
		initComponents();//initialisation des composants swing
		initialisation();//initialisation du systeme spot
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        alicePanel = new javax.swing.JPanel();
        mainMenuAlice = new javax.swing.JPanel();
        activateLabelAlice = new javax.swing.JLabel();
        activateButtonAlice = new javax.swing.JButton();
        jScrollPaneAlice1 = new javax.swing.JScrollPane();
        santeAreaAlice = new javax.swing.JTextArea();
        labelSanteAlice = new javax.swing.JLabel();
        paramButtonAlice = new javax.swing.JButton();
        paramMenuAlice = new javax.swing.JPanel();
        retourButtonAlice = new javax.swing.JButton();
        jScrollPaneAlice2 = new javax.swing.JScrollPane();
        contactListAlice = new javax.swing.JTextArea();
        labellisteAlice = new javax.swing.JLabel();
        declarationButtonAlice = new javax.swing.JButton();
        bobPanel = new javax.swing.JPanel();
        mainMenuBob = new javax.swing.JPanel();
        activateLabelBob = new javax.swing.JLabel();
        activateButtonBob = new javax.swing.JButton();
        jScrollPaneBob1 = new javax.swing.JScrollPane();
        santeAreaBob = new javax.swing.JTextArea();
        labelSanteBob = new javax.swing.JLabel();
        paramButtonBob = new javax.swing.JButton();
        paramMenuBob = new javax.swing.JPanel();
        retourButtonBob = new javax.swing.JButton();
        jScrollPaneBob2 = new javax.swing.JScrollPane();
        contactListBob = new javax.swing.JTextArea();
        labellisteBob = new javax.swing.JLabel();
        declarationButtonBob = new javax.swing.JButton();
        haPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        verifArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        inscArea = new javax.swing.JTextArea();
        scenarioPanel = new javax.swing.JPanel();
        AliceRBobButton = new javax.swing.JButton();
        AliceforgeButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        AliceRQqnButton = new javax.swing.JButton();
        aliceRBobLabel = new javax.swing.JLabel();
        aliceRQqnLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        alicePanel.setLayout(new java.awt.CardLayout());

        activateLabelAlice.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        activateLabelAlice.setForeground(java.awt.Color.red);
        activateLabelAlice.setText("SPOT EST DESACTIVE");

        activateButtonAlice.setText("ACTIVER");
        activateButtonAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateButtonAliceActionPerformed(evt);
            }
        });

        santeAreaAlice.setBackground(new java.awt.Color(113, 185, 46));
        santeAreaAlice.setColumns(20);
        santeAreaAlice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        santeAreaAlice.setForeground(java.awt.Color.white);
        santeAreaAlice.setLineWrap(true);
        santeAreaAlice.setRows(5);
        santeAreaAlice.setText("Pas de cas contact détecté");
        santeAreaAlice.setWrapStyleWord(true);
        jScrollPaneAlice1.setViewportView(santeAreaAlice);

        labelSanteAlice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelSanteAlice.setText("Votre santé");

        paramButtonAlice.setText("paramètres");
        paramButtonAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramButtonAliceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuAliceLayout = new javax.swing.GroupLayout(mainMenuAlice);
        mainMenuAlice.setLayout(mainMenuAliceLayout);
        mainMenuAliceLayout.setHorizontalGroup(
            mainMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuAliceLayout.createSequentialGroup()
                .addGroup(mainMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuAliceLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneAlice1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuAliceLayout.createSequentialGroup()
                        .addContainerGap(447, Short.MAX_VALUE)
                        .addComponent(paramButtonAlice)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuAliceLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(activateLabelAlice)
                .addGap(77, 77, 77))
            .addGroup(mainMenuAliceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activateButtonAlice, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSanteAlice))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainMenuAliceLayout.setVerticalGroup(
            mainMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuAliceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paramButtonAlice)
                .addGap(43, 43, 43)
                .addComponent(activateLabelAlice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(activateButtonAlice)
                .addGap(26, 26, 26)
                .addComponent(labelSanteAlice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneAlice1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        alicePanel.add(mainMenuAlice, "card2");

        retourButtonAlice.setText("retour");
        retourButtonAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonAliceActionPerformed(evt);
            }
        });

        contactListAlice.setEditable(false);
        contactListAlice.setColumns(20);
        contactListAlice.setRows(5);
        jScrollPaneAlice2.setViewportView(contactListAlice);

        labellisteAlice.setText("Liste de contacts");

        declarationButtonAlice.setText("Se déclarer infecté");
        declarationButtonAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declarationButtonAliceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paramMenuAliceLayout = new javax.swing.GroupLayout(paramMenuAlice);
        paramMenuAlice.setLayout(paramMenuAliceLayout);
        paramMenuAliceLayout.setHorizontalGroup(
            paramMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paramMenuAliceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(retourButtonAlice))
            .addGroup(paramMenuAliceLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(paramMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPaneAlice2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labellisteAlice)
                    .addComponent(declarationButtonAlice, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        paramMenuAliceLayout.setVerticalGroup(
            paramMenuAliceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paramMenuAliceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retourButtonAlice)
                .addGap(29, 29, 29)
                .addComponent(declarationButtonAlice, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(labellisteAlice, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneAlice2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        alicePanel.add(paramMenuAlice, "card4");

        jTabbedPane1.addTab("Alice", alicePanel);

        bobPanel.setLayout(new java.awt.CardLayout());

        activateLabelBob.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        activateLabelBob.setForeground(java.awt.Color.red);
        activateLabelBob.setText("SPOT EST DESACTIVE");

        activateButtonBob.setText("ACTIVER");
        activateButtonBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateButtonBobActionPerformed(evt);
            }
        });

        santeAreaBob.setBackground(new java.awt.Color(113, 185, 46));
        santeAreaBob.setColumns(20);
        santeAreaBob.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        santeAreaBob.setForeground(java.awt.Color.white);
        santeAreaBob.setLineWrap(true);
        santeAreaBob.setRows(5);
        santeAreaBob.setText("Pas de cas contact détecté");
        santeAreaBob.setWrapStyleWord(true);
        jScrollPaneBob1.setViewportView(santeAreaBob);

        labelSanteBob.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelSanteBob.setText("Votre santé");

        paramButtonBob.setText("paramètres");
        paramButtonBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramButtonBobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuBobLayout = new javax.swing.GroupLayout(mainMenuBob);
        mainMenuBob.setLayout(mainMenuBobLayout);
        mainMenuBobLayout.setHorizontalGroup(
            mainMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuBobLayout.createSequentialGroup()
                .addGroup(mainMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuBobLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneBob1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuBobLayout.createSequentialGroup()
                        .addContainerGap(447, Short.MAX_VALUE)
                        .addComponent(paramButtonBob)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuBobLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(activateLabelBob)
                .addGap(77, 77, 77))
            .addGroup(mainMenuBobLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activateButtonBob, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSanteBob))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainMenuBobLayout.setVerticalGroup(
            mainMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuBobLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paramButtonBob)
                .addGap(43, 43, 43)
                .addComponent(activateLabelBob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(activateButtonBob)
                .addGap(26, 26, 26)
                .addComponent(labelSanteBob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneBob1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        bobPanel.add(mainMenuBob, "card2");

        retourButtonBob.setText("retour");
        retourButtonBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonBobActionPerformed(evt);
            }
        });

        contactListBob.setEditable(false);
        contactListBob.setColumns(20);
        contactListBob.setRows(5);
        jScrollPaneBob2.setViewportView(contactListBob);

        labellisteBob.setText("Liste de contacts");

        declarationButtonBob.setText("Se déclarer infecté");
        declarationButtonBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declarationButtonBobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paramMenuBobLayout = new javax.swing.GroupLayout(paramMenuBob);
        paramMenuBob.setLayout(paramMenuBobLayout);
        paramMenuBobLayout.setHorizontalGroup(
            paramMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paramMenuBobLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(retourButtonBob))
            .addGroup(paramMenuBobLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(paramMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPaneBob2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labellisteBob)
                    .addComponent(declarationButtonBob, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        paramMenuBobLayout.setVerticalGroup(
            paramMenuBobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paramMenuBobLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retourButtonBob)
                .addGap(29, 29, 29)
                .addComponent(declarationButtonBob, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(labellisteBob, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneBob2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bobPanel.add(paramMenuBob, "card4");

        jTabbedPane1.addTab("Bob", bobPanel);

        haPanel.setLayout(new java.awt.CardLayout());

        verifArea.setEditable(false);
        verifArea.setColumns(20);
        verifArea.setRows(5);
        jScrollPane4.setViewportView(verifArea);

        jLabel2.setText("Vérifications");

        jLabel3.setText("Inscriptions");

        inscArea.setEditable(false);
        inscArea.setColumns(20);
        inscArea.setRows(5);
        jScrollPane5.setViewportView(inscArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 229, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(235, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        haPanel.add(jPanel1, "card2");

        jTabbedPane1.addTab("Autorité de santé", haPanel);

        AliceRBobButton.setText("Alice rencontre Bob");
        AliceRBobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AliceRBobButtonActionPerformed(evt);
            }
        });

        AliceforgeButton.setText("Alice forge un contact");
        AliceforgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AliceforgeButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Réinitialisation du démonstrateur");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        AliceRQqnButton.setText("<html> <center> Alice rencontre une <br> personne quelconque</center></html>");
        AliceRQqnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AliceRQqnButtonActionPerformed(evt);
            }
        });

        aliceRBobLabel.setForeground(new java.awt.Color(255, 0, 9));
        aliceRBobLabel.setText("SPOTs désactivés");

        aliceRQqnLabel.setForeground(new java.awt.Color(255, 0, 9));
        aliceRQqnLabel.setText("SPOT désactivé");

        javax.swing.GroupLayout scenarioPanelLayout = new javax.swing.GroupLayout(scenarioPanel);
        scenarioPanel.setLayout(scenarioPanelLayout);
        scenarioPanelLayout.setHorizontalGroup(
            scenarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scenarioPanelLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(scenarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scenarioPanelLayout.createSequentialGroup()
                        .addGap(0, 36, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(scenarioPanelLayout.createSequentialGroup()
                        .addComponent(AliceRBobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(AliceRQqnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(60, Short.MAX_VALUE))))
            .addGroup(scenarioPanelLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(AliceforgeButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(scenarioPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(aliceRBobLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aliceRQqnLabel)
                .addGap(100, 100, 100))
        );

        scenarioPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AliceRBobButton, AliceforgeButton});

        scenarioPanelLayout.setVerticalGroup(
            scenarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scenarioPanelLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(scenarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(aliceRBobLabel)
                    .addComponent(aliceRQqnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scenarioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AliceRQqnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AliceRBobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(AliceforgeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        scenarioPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {AliceRBobButton, AliceforgeButton});

        jTabbedPane1.addTab("Scénarios", scenarioPanel);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/** POSSIBILITE DE MODIFIER A PARTIR D'ICI **/

	private TrustedAuthority ta;
	private GroupManager gm;
	private Proxy proxy;
	private HealthAuthority ha;
	private Server server;
	private User alice;
	private User bob;

	public void initialisation() {// Déclaration des variables et initialisation du système SPOT
		ta = new TrustedAuthority("a_rapide");
		gm = new GroupManager(ta);
		proxy = new Proxy(ta, gm);
		ha = new HealthAuthority(ta, gm.getDatabaseGM().getCrs());
		server = new Server(ta);

		alice = new User(ta, ha);// Création d'alice et bob, affichage dans l'onglet autorité de santé
		bob = new User(ta, ha);
		inscArea.append("Inscription d'un nouvel utilisateur, identifiant :" + alice.getIDu() + "\n");
		inscArea.append("Inscription d'un nouvel utilisateur, identifiant :" + bob.getIDu() + "\n");
		AliceRQqnButton.setEnabled(false);// Les boutons de rencontre sont désactivés tant qu'alice et bob n'ont pas
											// activé leur spot
		AliceRBobButton.setEnabled(false);
	}

	private int activateButtonAliceState = 0;// =0 si le spot d'Alice est désactivé, 1 sinon

	private void activateButtonAliceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_activateButtonAliceActionPerformed
		
		if (activateButtonAliceState == 0) {// Activer le spot
			activateButtonAlice.setText("DESACTIVER");
			activateButtonAliceState = 1;
			activateLabelAlice.setText("SPOT EST ACTIVÉ    ");
			activateLabelAlice.setForeground(Color.green);
			if (activateButtonBobState == 1) {// active le bouton de rencontre avec bob s'il a aussi activé son spot
				AliceRBobButton.setEnabled(true);
				aliceRBobLabel.setText("");

			}
			AliceRQqnButton.setEnabled(true);
			aliceRQqnLabel.setText("");
		} else {// Désactiver le spot
			activateButtonAlice.setText("ACTIVER");
			activateButtonAliceState = 0;
			activateLabelAlice.setText("SPOT EST DESACTIVÉ");
			activateLabelAlice.setForeground(Color.red);
			AliceRQqnButton.setEnabled(false);// Désactive les boutons de rencontre
			aliceRQqnLabel.setText("SPOT desactivé");
			AliceRBobButton.setEnabled(false);
			aliceRBobLabel.setText("SPOTs désactivés");
		}
	}// GEN-LAST:event_activateButtonAliceActionPerformed

	private void paramButtonAliceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_paramButtonAliceActionPerformed
		/** Bascule vers le menu paramètres **/
		
		paramMenuAlice.setVisible(true);
		mainMenuAlice.setVisible(false);
	}// GEN-LAST:event_paramButtonAliceActionPerformed

	private void retourButtonAliceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_retourButtonAliceActionPerformed
		/** Bascule vers le menu pricipal **/
		
		paramMenuAlice.setVisible(false);
		mainMenuAlice.setVisible(true);
	}// GEN-LAST:event_retourButtonAliceActionPerformed

	private void declarationButtonAliceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_declarationButtonAliceActionPerformed
		/** Alice se décalre infectée **/
		
		verifArea.append("\nVérification de la liste de contact de " + alice.getIDu());
		boolean sig = ha.Sig_Verify_aggregation(alice.getContact_list(), gm.getDatabaseGM().getCrs());
		boolean ccm = ha.CCM_Verify_aggregation(server, alice);
		verifArea.append("\n Sig_Verify : " + sig);
		verifArea.append("\n CCM_Verify : " + ccm);
		if (sig) {
			if (activateButtonBobState == 1) {
				santeAreaBob.setBackground(Color.red);
				santeAreaBob.setText("\n Cas contact détecté, isolez-vous et faites un test PCR au plus vite");
			}

		} else {
			verifArea.append("\n Rejet de la liste de contacts");
		}

	}// GEN-LAST:event_declarationButtonAliceActionPerformed

	private int activateButtonBobState = 0;

	
	private void activateButtonBobActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_activateButtonBobActionPerformed
		/**Même fonctionnement que chez alice**/
		
		if (activateButtonBobState == 0) { 
			activateButtonBob.setText("DESACTIVER");
			activateButtonBobState = 1;
			activateLabelBob.setText("SPOT EST ACTIVÉ    ");
			activateLabelBob.setForeground(Color.green);
			if (activateButtonAliceState == 1) {
				AliceRBobButton.setEnabled(true);
				aliceRBobLabel.setText("");

			}
		} else {
			activateButtonBob.setText("ACTIVER");
			activateButtonBobState = 0;
			activateLabelBob.setText("SPOT EST DESACTIVÉ");
			activateLabelBob.setForeground(Color.red);
			AliceRBobButton.setEnabled(false);
			aliceRBobLabel.setText("SPOTs désactivés");
		}
	}// GEN-LAST:event_activateButtonBobActionPerformed

	private void paramButtonBobActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_paramButtonBobActionPerformed
		/**Bascule vers le menu paramètres**/
		
		paramMenuBob.setVisible(true);
		mainMenuBob.setVisible(false);
	}// GEN-LAST:event_paramButtonBobActionPerformed

	private void retourButtonBobActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_retourButtonBobActionPerformed
		/**Bascule vers le menu principal**/
		
		paramMenuBob.setVisible(false);
		mainMenuBob.setVisible(true);
	}// GEN-LAST:event_retourButtonBobActionPerformed

	private void declarationButtonBobActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_declarationButtonBobActionPerformed
		/**Bob se délcare infecté**/
		
		verifArea.append("\nVérification de la liste de contact de " + bob.getIDu());
		boolean sig = ha.Sig_Verify_aggregation(bob.getContact_list(), gm.getDatabaseGM().getCrs());
		boolean ccm = ha.CCM_Verify_aggregation(server, bob);
		verifArea.append("\n Sig_Verify : " + sig);
		verifArea.append("\n CCM_Verify : " + ccm);

		if (sig) {
			if (activateButtonAliceState == 1) {
				santeAreaAlice.setBackground(Color.red);
				santeAreaAlice.setText("\n Cas contact détecté, isolez-vous et faites un test PCR au plus vite");
			}

		} else {
			verifArea.append("\n Rejet de la liste de contacts");
		}
	}// GEN-LAST:event_declarationButtonBobActionPerformed

	private void AliceRBobButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AliceRBobButtonActionPerformed
		/**Alice rencontre bob**/
		
		Element CCM = alice.set_CCM_U();//le CCM de la rencontre
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();

		contactListAlice.append("\n[" + dtf.format(now) + "] Contact : " + CCM);//Affichage du contact dans la liste de Bob et Alice
		contactListBob.append("\n[" + dtf.format(now) + "] Contact : " + CCM);

		Element[] s_psign = server.s_PSign_S(CCM);
		Element PS = s_psign[0];
		Element PSp = s_psign[1];
		Element IDalice = alice.getIDu();
		Element IDbob = bob.getIDu();
		Contact psign_alice = proxy.P_sign_P(PS, IDalice);
		ContactSigned contactalice = new ContactSigned(psign_alice, PSp);
		Contact psign_bob = proxy.P_sign_P(PS, IDbob);
		ContactSigned contactbob = new ContactSigned(psign_bob, PSp);
		alice.add_contact(contactalice);
		bob.add_contact(contactbob);
	}// GEN-LAST:event_AliceRBobButtonActionPerformed

	private void AliceforgeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AliceforgeButtonActionPerformed
		/**Alice forge un faux contact**/
		
		Element CCM = alice.set_CCM_U();
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();
		contactListAlice.append("\n[" + dtf.format(now) + "] Contact : " + CCM);

		Pairing pairing = gm.getDatabaseGM().getCrs().getPairing();
		ContactSigned fauxcontact = new ContactSigned(new Contact(pairing.getZr().newRandomElement(), null, null)
				,pairing.getZr().newRandomElement());
		alice.add_contact(fauxcontact);
	}// GEN-LAST:event_AliceforgeButtonActionPerformed

	private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_resetButtonActionPerformed
		/**Réinitialise le démonstrateur**/
		
		inscArea.setText("");//Vide les zones de texte
		contactListAlice.setText("");
		contactListBob.setText("");
		verifArea.setText("");
		santeAreaAlice.setBackground(new java.awt.Color(113, 185, 46));
		santeAreaAlice.setText("Pas de cas contact détecté");
		santeAreaBob.setBackground(new java.awt.Color(113, 185, 46));
		santeAreaBob.setText("Pas de cas contact détecté");
		initialisation();//Refait une initialisation intégrale du système spot
		aliceRBobLabel.setText("SPOTs désactivés");
		aliceRQqnLabel.setText("SPOT désactivé");
		paramMenuAlice.setVisible(false);//retour au menu principal chez alice et bob
		mainMenuAlice.setVisible(true);
		paramMenuBob.setVisible(false);
		mainMenuBob.setVisible(true);
		
		activateButtonAlice.setText("ACTIVER");//désactivation du SPOT d'alice et bob
		activateButtonAliceState = 0;
		activateLabelAlice.setText("SPOT EST DESACTIVÉ");
		activateLabelAlice.setForeground(Color.red);
		
		activateButtonBob.setText("ACTIVER");
		activateButtonBobState = 0;
		activateLabelBob.setText("SPOT EST DESACTIVÉ");
		activateLabelBob.setForeground(Color.red);


	}// GEN-LAST:event_resetButtonActionPerformed

	private void AliceRQqnButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AliceRRandomButtonActionPerformed
		/**Alice rencontre une personne quelquoncque**/
		
		Element CCM = alice.set_CCM_U();
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
		LocalDateTime now = LocalDateTime.now();

		contactListAlice.append("\n[" + dtf.format(now) + "] Contact : " + CCM);
		Element[] s_psign = server.s_PSign_S(CCM);
		Element PS = s_psign[0];
		Element PSp = s_psign[1];
		Element IDalice = alice.getIDu();
		ContactSigned contactalice = new ContactSigned(proxy.P_sign_P(PS, IDalice),PSp);
		alice.add_contact(contactalice);
	}// GEN-LAST:event_AliceRRandomButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Interface_new.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Interface_new.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Interface_new.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Interface_new.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Interface_new().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AliceRBobButton;
    private javax.swing.JButton AliceRQqnButton;
    private javax.swing.JButton AliceforgeButton;
    private javax.swing.JButton activateButtonAlice;
    private javax.swing.JButton activateButtonBob;
    private javax.swing.JLabel activateLabelAlice;
    private javax.swing.JLabel activateLabelBob;
    private javax.swing.JPanel alicePanel;
    private javax.swing.JLabel aliceRBobLabel;
    private javax.swing.JLabel aliceRQqnLabel;
    private javax.swing.JPanel bobPanel;
    private javax.swing.JTextArea contactListAlice;
    private javax.swing.JTextArea contactListBob;
    private javax.swing.JButton declarationButtonAlice;
    private javax.swing.JButton declarationButtonBob;
    private javax.swing.JPanel haPanel;
    private javax.swing.JTextArea inscArea;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPaneAlice1;
    private javax.swing.JScrollPane jScrollPaneAlice2;
    private javax.swing.JScrollPane jScrollPaneBob1;
    private javax.swing.JScrollPane jScrollPaneBob2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelSanteAlice;
    private javax.swing.JLabel labelSanteBob;
    private javax.swing.JLabel labellisteAlice;
    private javax.swing.JLabel labellisteBob;
    private javax.swing.JPanel mainMenuAlice;
    private javax.swing.JPanel mainMenuBob;
    private javax.swing.JButton paramButtonAlice;
    private javax.swing.JButton paramButtonBob;
    private javax.swing.JPanel paramMenuAlice;
    private javax.swing.JPanel paramMenuBob;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton retourButtonAlice;
    private javax.swing.JButton retourButtonBob;
    private javax.swing.JTextArea santeAreaAlice;
    private javax.swing.JTextArea santeAreaBob;
    private javax.swing.JPanel scenarioPanel;
    private javax.swing.JTextArea verifArea;
    // End of variables declaration//GEN-END:variables
}
